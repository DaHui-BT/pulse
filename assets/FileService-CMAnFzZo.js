var u=Object.defineProperty;var i=(r,e,s)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var a=(r,e,s)=>i(r,typeof e!="symbol"?e+"":e,s);import{R as l}from"./request-CnqHcAYJ.js";const t=class t{constructor(){a(this,"request");this.request=new l}static getInstance(){return t.instance||(t.instance=new t),t.instance}async findFileById(e){try{return{success:!0,data:(await this.request.get(`/file/${e}`)).data}}catch(s){return{success:!1,error:s.message}}}async findAllFiles(){try{return{success:!0,data:(await this.request.get("/file")).data}}catch(e){return{success:!1,error:e.message}}}async findFiles(e={},s={page:0,pageSize:10}){try{return{success:!0,data:{files:[],total:0}}}catch(n){return{success:!1,error:n.message}}}async uploadFile(e){try{const s=await this.request.post("/file/upload-single",{data:{file:e},headers:{"Content-Type":"multipart/form-data"}});return s.code==200?{success:!0,data:s.data}:{success:!1,error:s.message}}catch(s){return{success:!1,error:s.message}}}async deleteById(e){try{return{success:!0,data:this.request.delete(`/file/${e}`)}}catch(s){return{success:!1,error:s.message}}}};a(t,"instance");let c=t;export{c as F};
