var i=Object.defineProperty;var d=(a,e,s)=>e in a?i(a,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[e]=s;var c=(a,e,s)=>d(a,typeof e!="symbol"?e+"":e,s);import{c as l,f as h}from"./loading-DbInbvEp.js";import{ar as p}from"./index-Df9vkjUl.js";const r=class r{constructor(){c(this,"collection","user");c(this,"db");this.db=p.getInstance({appId:"pulse-application-tpfmdtx",cluster:"mongodb-atlas",database:"pulse-database",collection:"user"})}static getInstance(){return r.instance||(r.instance=new r),r.instance}async login(e,s){try{return{success:!0,data:await this.db.connect(e,s)}}catch(t){return{success:!1,error:t.message}}}async register(e,s){try{return{success:!0,data:await this.db.connect(e,s)}}catch(t){return{success:!1,error:t.message}}}getCurrentUser(){const e=this.db.getCurrentUser();return e==null?void 0:e.customData}async findUserById(e){try{return{success:!0,data:await this.db.findOne(this.collection,{_id:e})}}catch(s){return{success:!1,error:s.message}}}async findUsers(e={},s={page:0,pageSize:10}){try{const[t,n]=await Promise.all([this.db.find(this.collection,e,s),this.db.count(this.collection,e)]);return{success:!0,data:{users:t,total:n}}}catch(t){return{success:!1,error:t.message}}}async createUser(e){try{return{success:!0,data:await this.db.insertOne(this.collection,{...e,isActive:!0})}}catch(s){return{success:!1,error:s.message}}}async updateUser(e,s){try{return{success:!0,data:await this.db.updateOne(this.collection,{_id:e},s)}}catch(t){return{success:!1,error:t.message}}}async updateAvatar(e,s){try{const t=await l(s);if(!t)throw new Error("Image compression failed");const n=await h(t),o={filename:s.name,type:s.type,size:s.size,data:n};return await this.updateUser(e,{avatar:o})}catch(t){return{success:!1,error:t.message}}}async deleteById(e){try{return{success:!0,data:this.db.updateOne(this.collection,{_id:e},{isActive:!1})}}catch(s){return{success:!1,error:s.message}}}};c(r,"instance");let u=r;export{u as U};
