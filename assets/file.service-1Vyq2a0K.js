var n=Object.defineProperty;var i=(a,s,e)=>s in a?n(a,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[s]=e;var c=(a,s,e)=>i(a,typeof s!="symbol"?s+"":s,e);import{R as l}from"./request-zUbwgvDi.js";const r=class r{constructor(){c(this,"request");this.request=new l}static getInstance(){return r.instance||(r.instance=new r),r.instance}async findFileById(s){try{return{success:!0,data:(await this.request.get(`/file/${s}`)).data}}catch(e){return{success:!1,error:e.message}}}async findAllFiles(){try{return{success:!0,data:(await this.request.get("/file")).data}}catch(s){return{success:!1,error:s.message}}}async findFiles(s={},e={current:0,size:10}){try{const t=await this.request.get("/file",{params:{...s,...e}});return t.code===200?{success:!0,data:{files:t.data.data,pagination:t.data.pagination}}:{success:!1,data:null}}catch(t){return{success:!1,error:t.message}}}async existFileByHash(s){try{return{success:!0,data:(await this.request.get(`/file/exist/${s}`)).data}}catch(e){return{success:!1,error:e.message}}}async mergeChunks(s){return this.request.post("/file/merge",{data:s})}async uploadFile(s){try{const e=await this.request.post("/file",{data:s});return e.code==200?{success:!0,data:e.data,message:e.message}:{success:!1,error:e.message}}catch(e){return{success:!1,error:e.message}}}async uploadChunk(s,e=void 0){try{const t=await this.request.post("/file/chunk",{data:s,headers:{"Content-Type":"multipart/form-data"},signal:e});return t.code==200?{success:!0,data:t.data}:{success:!1,error:t.message}}catch(t){return{success:!1,error:t.message}}}async updateFile(s,e){try{const t=await this.request.put(`/file/${s}`,{data:e});return t.code==200?{success:!0,data:t.data,message:t.message}:{success:!1,error:t.message}}catch(t){return{success:!1,error:t.message}}}async deleteById(s){try{const e=await this.request.delete(`/file/${s}`);return{success:!0,data:e.data,message:e.message}}catch(e){return{success:!1,error:e.message}}}async deletePerpetualById(s){try{const e=await this.request.delete(`/file/${s}`);return{success:!0,data:e.data,message:e.message}}catch(e){return{success:!1,error:e.message}}}};c(r,"instance");let u=r;export{u as F};
